{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0",
    "title": "Account Password Operations",
    "description": "<h2>Overview</h2>\n\nThe `Account password operations` section is designed for managing customer account passwords."
  },
  "servers": [
    {
      "url": "https://api.vault.sandbox.testessential.net",
      "description": "Sandbox"
    }
  ],
  "paths": {
    "/v2/mobile/password/change": {
      "put": {
        "summary": "Change Password",
        "description": "The endpoint is designed for [changing the password](../docs/password-change-process.md) of a user on a mobile device. When a client sends a request to change the password using this method, they should provide the current password and the new password.\r\n\r\nInstructions for using the endpoint are available [here](../docs/change-password.md).",
        "operationId": "change-password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "description": "the customer's current password."
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "the new password that the customer wants to set."
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "currentPassword": "string",
                    "newPassword": "string"
                  }
                }
              },
              "examples": {
                "Change password": {
                  "value": {
                    "currentPassword": "1234Qwerty",
                    "newPassword": "1234Qwerty1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK\r\n\r\nMedia type: `application/json`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "indicates the result of the password change operation."
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "result": "string"
                    }
                  }
                },
                "examples": {
                  "Change password": {
                    "value": {
                      "result": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-Bad-Request"
          }
        },
        "security": [
          {
            "Authorization: Bearer": []
          }
        ],
        "servers": [
          {
            "url": "https://api.vault.sandbox.testessential.net",
            "description": "Sandbox"
          }
        ]
      }
    },
    "/v2/mobile/password/reset": {
      "post": {
        "summary": "Resend Password",
        "description": "The endpoint provides the ability to [reset a user's password](../docs/Password-Reset-Process.md), usually by sending instructions to the registered mobile number.\r\n\r\nInstructions for using the endpoint are available [here](../docs/resend-password.md).",
        "operationId": "resend-password",
        "parameters": [
          {
            "name": "X-Fingerprint",
            "in": "header",
            "description": "indicates whether fingerprint login has been performed in the application. Fingerprint for WEB for Android and iOS can be viewed [here](Api/fingerprint.json).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Signature",
            "in": "header",
            "description": "a signature that verifies the data between the sender and the recipient. About x-signature can be read [here].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Merchant-ID",
            "in": "header",
            "description": "identification of requests from users of a specific partner.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "bece038f-2e46-49f4-b25e-89cd38d6dc16"
            }
          },
          {
            "name": "X-Version",
            "in": "header",
            "description": "version fingerprint.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1.2"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "description": "the phone number that needs to be provided during registration."
                  }
                },
                "required": [
                  "phone"
                ]
              },
              "examples": {
                "Resend password": {
                  "value": {
                    "phone": "+447871234567"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK\r\n\r\nThe response status code indicates successful re-sending of the email to the mailbox.\r\n\r\nMedia type: `application/json`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/result",
                      "description": "a string value representing the outcome of the password reset operation."
                    }
                  }
                },
                "examples": {
                  "200 OK": {
                    "value": {
                      "result": "ok"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The response status code indicates that the requested page was not found on the server.\r\n\r\nMedia type: `application/json`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "message that will be displayed to the user."
                    },
                    "field": {
                      "type": "string",
                      "description": "specifies the field in the request that caused the error."
                    },
                    "errorId": {
                      "type": "integer",
                      "description": "integer identifier of the error."
                    },
                    "systemId": {
                      "type": "string",
                      "description": "identifier of the component."
                    },
                    "originalMessage": {
                      "type": "string",
                      "description": "the original error message."
                    },
                    "errorStackTrace": {
                      "type": "string",
                      "description": "the place where the error appeared in the code."
                    },
                    "data": {
                      "type": "object",
                      "description": "additional data related to the error, structured as key-value pairs.",
                      "properties": {
                        "additionalProp1": {
                          "type": "object"
                        },
                        "additionalProp2": {
                          "type": "object"
                        },
                        "additionalProp3": {
                          "type": "object"
                        }
                      }
                    },
                    "error": {
                      "type": "string",
                      "description": "identifier of the error."
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "message": "string",
                      "field": "string",
                      "errorId": 0,
                      "systemId": "string",
                      "originalMessage": "string",
                      "errorStackTrace": "string",
                      "data": {
                        "additionalProp1": {},
                        "additionalProp2": {},
                        "additionalProp3": {}
                      },
                      "error": "string"
                    }
                  }
                },
                "examples": {
                  "400 Bad Request  157": {
                    "value": {
                      "error": "SMS_CODE_DELAY_NOT_REACHED",
                      "errorId": 157,
                      "message": "Please wait a minute to get next code",
                      "systemId": "core"
                    }
                  },
                  "400 Bad Request 8": {
                    "value": {
                      "error": "CUSTOMER_VERIFICATION_CODE_INCORRECT",
                      "errorId": 8,
                      "message": "Incorrect code",
                      "systemId": "core"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization: Bearer": []
          }
        ],
        "servers": [
          {
            "url": "https://api.vault.sandbox.testessential.net",
            "description": "Sandbox"
          }
        ]
      }
    },
	"/v2/mobile/password/reset/confirm/code": {
    "post": {
      "summary": "Check SMS Code for New Password",
      "description": "The endpoint is used for checking the SMS code associated with the [process of resetting a password](../docs/password-change-process.md) for a mobile device. \r\n\r\nInstructions for using the endpoint are available [here](../docs/password-reset-confirm-code.md).",
      "operationId": "SMS-Code-for-new-password",
      "parameters": [
        {
          "name": "X-Merchant-ID",
          "in": "header",
          "description": "identification of requests from users of a specific partner.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "X-Version",
          "in": "header",
          "description": "version fingerprint.",
          "required": true,
          "schema": {
            "type": "string",
            "default": "1.2"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "the confirmation code sent to the client to verify the password reset request. In this case, the SMS code is always the same, and it is `1234`."
                },
                "phone": {
                  "type": "string",
                  "description": "the phone number that needs to be provided during registration."
                }
              },
              "x-examples": {
                "Example 1": {
                  "code": "string",
                  "phone": "string"
                }
              }
            },
            "examples": {
              "Check SMS Code for new password": {
                "value": {
                  "code": "1234",
                  "phone": "+447871234567"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK\r\n\r\nMedia type: `application/json`",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "result": {
                    "type": "string",
                    "description": "confirms the success of the password reset confirmation. "
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "result": "string"
                  }
                }
              },
              "examples": {
                "200 OK": {
                  "value": {
                    "result": "ok"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "The response status code indicates that the server cannot or will not process the request due to something perceived as a client error.\r\n\r\nMedia type: `application/json`",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "message that will be displayed to the user."
                  },
                  "field": {
                    "type": "string",
                    "description": "specifies the field in the request that caused the error."
                  },
                  "errorId": {
                    "type": "integer",
                    "description": "integer identifier of the error."
                  },
                  "systemId": {
                    "type": "string",
                    "description": "identifier of the component."
                  },
                  "originalMessage": {
                    "type": "string",
                    "description": "the original error message."
                  },
                  "errorStackTrace": {
                    "type": "string",
                    "description": "the place where the error appeared in the code."
                  },
                  "data": {
                    "type": "object",
                    "description": "additional data related to the error, structured as key-value pairs.",
                    "properties": {
                      "additionalProp1": {
                        "type": "object"
                      },
                      "additionalProp2": {
                        "type": "object"
                      },
                      "additionalProp3": {
                        "type": "object"
                      }
                    }
                  },
                  "error": {
                    "type": "string",
                    "description": "identifier of the error."
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "message": "string",
                    "field": "string",
                    "errorId": 0,
                    "systemId": "string",
                    "originalMessage": "string",
                    "errorStackTrace": "string",
                    "data": {
                      "additionalProp1": {},
                      "additionalProp2": {},
                      "additionalProp3": {}
                    },
                    "error": "string"
                  }
                }
              },
              "examples": {
                "400 Bad Request 8": {
                  "value": {
                    "message": "Incorrect code",
                    "errorId": 8,
                    "systemId": "core",
                    "error": "CUSTOMER_VERIFICATION_CODE_INCORRECT"
                  }
                },
                "400 Bad Request 9": {
                  "value": {
                    "message": "Code is expired, please resend code",
                    "errorId": 9,
                    "systemId": "core",
                    "error": "CUSTOMER_VERIFICATION_CODE_EXPIRED"
                  }
                },
                "400 Bad Request 422": {
                  "value": {
                    "message": "Please enter a valid phone number",
                    "field": "phone",
                    "errorId": 422,
                    "systemId": "core",
                    "error": "NOT_VALID_REQUEST_DATA"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization: Bearer": []
          }
        ],
        "servers": [
          {
            "url": "https://api.vault.sandbox.testessential.net",
            "description": "Sandbox"
          }
        ]
      }
    }
  },
  "/v2/mobile/password/reset/confirm": {
    "post": {
      "summary": "Set New Password",
      "description": "The endpoint is designed for setting a new password after confirming the [password reset](../docs/password-change-process.md) for a mobile device.\r\n\r\nInstructions for using the endpoint are available [here](../docs/set-new-password.md).",
      "operationId": "set-new-password",
      "parameters": [
        {
          "name": "X-Merchant-ID",
          "in": "header",
          "description": "identification of requests from users of a specific partner.",
          "required": true,
          "schema": {
            "type": "string",
            "default": "bece038f-2e46-49f4-b25e-89cd38d6dc16"
          }
        },
        {
          "name": "X-Version",
          "in": "header",
          "description": "version fingerprint.",
          "required": true,
          "schema": {
            "type": "string",
            "default": "1.2"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "the confirmation code sent to the client to verify the password reset request. In this case, the SMS code is always the same, and it is `1234`."
                },
                "phone": {
                  "type": "string",
                  "description": "the phone number that needs to be provided during registration."
                },
                "password": {
                  "type": "string",
                  "description": "the new password that the client wants to set."
                }
              },
              "x-examples": {
                "Example 1": {
                  "code": "string",
                  "phone": "string",
                  "password": "string"
                }
              }
            },
            "examples": {
              "Resend Code": {
                "value": {
                  "password": "12345Qwerty1234",
                  "phone": "+447871234567",
                  "code": "1234"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK\r\n\r\nMedia type: `application/json`",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_token": {
                    "type": "string",
                    "description": "an encrypted key, a short-lived token for accessing a resource."
                  },
                  "token_type": {
                    "type": "string",
                    "description": "bearer token."
                  },
                  "refresh_token": {
                    "type": "string",
                    "description": "these are credentials for accessing the API in the absence of a user session."
                  },
                  "expires_in": {
                    "type": "integer",
                    "description": "token lifetime in seconds."
                  },
                  "scope": {
                    "type": "string",
                    "description": "token action space, we almost always have a `read write`"
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "access_token": "string",
                    "token_type": "string",
                    "refresh_token": "string",
                    "expires_in": 0,
                    "scope": "string"
                  }
                }
              },
              "examples": {
                "200 OK": {
                  "value": {
                    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4NTU0ZDc0My05ZDExLTQ5YTEtYTMyMy03YmRmOGQ4NDdjMjEiLCJleHAiOjE3MDk3MjQ1NjQsImlhdCI6MTcwOTYzODE2NH0.deZXGfjS7oVprz2XoZseeYa7l8ti8aAJaELBeDDtglI",
                    "token_type": "bearer",
                    "refresh_token": "nWfLqFh_TbgHJHOp9XUmZ9_EhZI",
                    "expires_in": 86399,
                    "scope": "read write"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "The response status code indicates that the server cannot or will not process the request due to something perceived as a client error.\r\n\r\nMedia type: `application/json`",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "message that will be displayed to the user."
                  },
                  "field": {
                    "type": "string",
                    "description": "specifies the field in the request that caused the error."
                  },
                  "errorId": {
                    "type": "integer",
                    "description": "integer identifier of the error."
                  },
                  "systemId": {
                    "type": "string",
                    "description": "identifier of the component."
                  },
                  "originalMessage": {
                    "type": "string",
                    "description": "the original error message."
                  },
                  "errorStackTrace": {
                    "type": "string",
                    "description": "the place where the error appeared in the code."
                  },
                  "data": {
                    "type": "object",
                    "description": "additional data related to the error, structured as key-value pairs.",
                    "properties": {
                      "additionalProp1": {
                        "type": "object"
                      },
                      "additionalProp2": {
                        "type": "object"
                      },
                      "additionalProp3": {
                        "type": "object"
                      }
                    }
                  },
                  "error": {
                    "type": "string",
                    "description": "identifier of the error."
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "message": "string",
                    "field": "string",
                    "errorId": 0,
                    "systemId": "string",
                    "originalMessage": "string",
                    "errorStackTrace": "string",
                    "data": {
                      "additionalProp1": {},
                      "additionalProp2": {},
                      "additionalProp3": {}
                    },
                    "error": "string"
                  }
                }
              },
              "examples": {
                "400 Bad Request 288": {
                  "value": {
                    "message": "New password should not be the same as the old one",
                    "errorId": 288,
                    "systemId": "core",
                    "error": "NEW_PASSWORD_EQUALS_OLD"
                  }
                },
                "400 Bad Request 297": {
                  "value": {
                    "message": "Password entered is too simple. Please enter a more complex password.",
                    "errorId": 297,
                    "systemId": "core",
                    "error": "PASSWORD_TOO_SIMPLE"
                  }
                },
                "400 Bad Request 8": {
                  "value": {
                    "message": "Incorrect code",
                    "errorId": 8,
                    "systemId": "core",
                    "error": "CUSTOMER_VERIFICATION_CODE_INCORRECT"
                  }
                },
                "400 Bad Request 9": {
                  "value": {
                    "message": "Code is expired, please resend code",
                    "errorId": 9,
                    "systemId": "core",
                    "error": "CUSTOMER_VERIFICATION_CODE_EXPIRED"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization: Bearer": []
          }
        ],
        "servers": [
          {
            "url": "https://api.vault.sandbox.testessential.net",
            "description": "Sandbox"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Authorization: Bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400-Bad-Request": {
        "description": "The response status code indicates that the server cannot or will not process the request due to something perceived as a client error.\r\n\r\nMedia type: `application/json`",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message that will be displayed to the user."
                },
                "field": {
                  "type": "string",
                  "description": "specifies the field in the request that caused the error."
                },
                "errorId": {
                  "type": "integer",
                  "description": "integer identifier of the error."
                },
                "systemId": {
                  "type": "string",
                  "description": "identifier of the component."
                },
                "originalMessage": {
                  "type": "string",
                  "description": "the original error message."
                },
                "errorStackTrace": {
                  "type": "string",
                  "description": "the place where the error appeared in the code."
                },
                "data": {
                  "type": "object",
                  "description": "additional data related to the error, structured as key-value pairs.",
                  "properties": {
                    "additionalProp1": {
                      "type": "object"
                    },
                    "additionalProp2": {
                      "type": "object"
                    },
                    "additionalProp3": {
                      "type": "object"
                    }
                  }
                },
                "error": {
                  "type": "string",
                  "description": "identifier of the error."
                }
              },
              "x-examples": {
                "Example 1": {
                  "message": "string",
                  "field": "string",
                  "errorId": 0,
                  "systemId": "string",
                  "originalMessage": "string",
                  "errorStackTrace": "string",
                  "data": {
                    "additionalProp1": {},
                    "additionalProp2": {},
                    "additionalProp3": {}
                  },
                  "error": "string"
                }
              }
            },
            "examples": {
              "400 Bad Request": {
                "value": {
                  "message": "Sorry for inconvenience. We're fixing the issue. If you have urgent questions, contact support",
                  "errorId": 0,
                  "systemId": "core",
                  "error": "COMMON"
                }
              }
            }
          }
        }
      },
      "424-Failed-Dependency": {
        "description": "The response status code indicates that the method could not be performed on the resource because the requested action depended on another action, and that action failed.\n\nMedia type: `application/json`",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "errorId": {
                  "type": "integer"
                },
                "systemId": {
                  "type": "string"
                },
                "sessionId": {
                  "type": "string"
                },
                "factors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "default": {
                        "type": "boolean",
                        "default": true
                      }
                    }
                  }
                }
              },
              "x-examples": {
                "Example 1": {
                  "message": "string",
                  "errorId": 0,
                  "systemId": "string",
                  "sessionId": "string",
                  "factors": [
                    {
                      "id": "string",
                      "type": "EMAIL",
                      "value": "string",
                      "default": true
                    }
                  ]
                }
              }
            },
            "examples": {
              "424 Failed Dependency": {
                "value": {
                  "message": "string",
                  "errorId": 0,
                  "systemId": "string",
                  "sessionId": "string",
                  "factors": [
                    {
                      "id": "string",
                      "type": "EMAIL",
                      "value": "string",
                      "default": true
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "401-Unauthorized": {
        "description": "The response status code indicates that it cannot be completed due to missing or invalid authentication data.\r\n\r\nMedia type: `application/json`",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message that will be displayed to the user."
                },
                "field": {
                  "type": "string"
                },
                "errorId": {
                  "type": "integer",
                  "description": "integer identifier of the error."
                },
                "systemId": {
                  "type": "string",
                  "description": "identifier of the component"
                },
                "originalMessage": {
                  "type": "string"
                },
                "errorStackTrace": {
                  "type": "string",
                  "description": "the place where the error appeared in the code."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "additionalProp1": {
                      "type": "object"
                    },
                    "additionalProp2": {
                      "type": "object"
                    },
                    "additionalProp3": {
                      "type": "object"
                    }
                  }
                },
                "error": {
                  "type": "string",
                  "description": "identifier of the error."
                }
              },
              "x-examples": {
                "Example 1": {
                  "message": "string",
                  "field": "string",
                  "errorId": 0,
                  "systemId": "string",
                  "originalMessage": "string",
                  "errorStackTrace": "string",
                  "data": {
                    "additionalProp1": {},
                    "additionalProp2": {},
                    "additionalProp3": {}
                  },
                  "error": "string"
                }
              }
            },
            "examples": {
              "401 Unauthorized": {
                "value": {
                  "error": "invalid_token",
                  "systemId": "core",
                  "errorId": 0,
                  "message": "Access token expired"
                }
              }
            }
          }
        }
      },
      "115-Phone-number-is-already-registered": {
        "description": "The response status code indicates that the entered user number is already registered.\r\n\r\nMedia type: `*/*`",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string"
                }
              },
              "x-examples": {
                "Example 1": {
                  "result": "string"
                }
              }
            },
            "examples": {
              "115 Phone number is already registered": {
                "value": {
                  "result": "string"
                }
              }
            }
          }
        }
      },
      "404-Not-Found": {
        "description": "The response status code indicates that the requested page was not found on the server.\r\n\r\nMedia type: `application/json`",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message that will be displayed to the user."
                },
                "field": {
                  "type": "string"
                },
                "errorId": {
                  "type": "integer",
                  "description": "integer identifier of the error."
                },
                "systemId": {
                  "type": "string",
                  "description": "identifier of the component"
                },
                "originalMessage": {
                  "type": "string"
                },
                "errorStackTrace": {
                  "type": "string",
                  "description": "the place where the error appeared in the code."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "additionalProp1": {
                      "type": "object"
                    },
                    "additionalProp2": {
                      "type": "object"
                    },
                    "additionalProp3": {
                      "type": "object"
                    }
                  }
                },
                "error": {
                  "type": "string",
                  "description": "identifier of the error."
                }
              },
              "x-examples": {
                "Example 1": {
                  "message": "string",
                  "field": "string",
                  "errorId": 0,
                  "systemId": "string",
                  "originalMessage": "string",
                  "errorStackTrace": "string",
                  "data": {
                    "additionalProp1": {},
                    "additionalProp2": {},
                    "additionalProp3": {}
                  },
                  "error": "string"
                }
              }
            },
            "examples": {
              "404 Not Found": {
                "value": {
                  "message": "string",
                  "field": "string",
                  "errorId": 0,
                  "systemId": "string",
                  "originalMessage": "string",
                  "errorStackTrace": "string",
                  "data": {
                    "additionalProp1": {},
                    "additionalProp2": {},
                    "additionalProp3": {}
                  },
                  "error": "string"
                }
              }
            }
          }
        }
      },
      "500-Internal-Server-Error": {
        "description": "The response status code indicates, indicates that the server cannot process the request correctly.\n\nMedia type: `application/json`",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "500 Internal Server Error": {
                "value": {}
              }
            }
          }
        }
      },
      "403-Forbidden": {
        "description": "The response status code returned to the client by the server when access to the specified resource is restricted.\r\n\r\nMedia type: `application/json`",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "403 Forbidden": {
                "value": {
                  "message": "Sorry for inconvenience. We're fixing the issue. If you have urgent questions, contact support",
                  "field": "password",
                  "errorId": 422,
                  "systemId": "core",
                  "error": "NOT_VALID_REQUEST_DATA"
                }
              }
            }
          }
        }
      },
      "422-Unprocessable-Entity": {
        "description": "The response status code indicates that the entered user number is already registered.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "errorId": {
                  "type": "integer"
                },
                "systemId": {
                  "type": "string"
                },
                "sessionId": {
                  "type": "string"
                },
                "factors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "default": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "x-examples": {
                "Example 1": {
                  "message": "string",
                  "errorId": 0,
                  "systemId": "string",
                  "sessionId": "string",
                  "factors": [
                    {
                      "id": "string",
                      "type": "EMAIL",
                      "value": "string",
                      "default": true
                    }
                  ]
                }
              }
            },
            "examples": {
              "424 Failed Dependency": {
                "value": {
                  "message": "string",
                  "errorId": 0,
                  "systemId": "string",
                  "sessionId": "string",
                  "factors": [
                    {
                      "id": "string",
                      "type": "EMAIL",
                      "value": "string",
                      "default": true
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "result": {
        "type": "string",
        "description": "response indicating the result of the resend email operation."
      }
    }
  },
  "security": [
    {
      "Authorization: Bearer": []
    }
  ]}
  }