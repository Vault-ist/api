{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0",
    "title": "SignIn / SignOut",
    "description": "<h2>Overview</h2>\n\nThe `SignIn/SignOut` section in Vault is designed to manage user authentication and authorization. This section ensures secure access to the system's functionality by overseeing the processes of [SignIn](/docs/Sign-In-to-the-System.md), [SignOut](/docs/Log-Out-to-the-System.md) and [password reset](/docs/Password-Reset-Process.md).\n\nThis section provides two endpoints that enable the following actions:\n\n- **User Authentication:** This process is facilitated by the [`POST /oauth/token`](Api/SignIn-SignOut.yaml/paths/~1oauth~1token/post) endpoint. Specifically designed for user authentication, it generates an OAuth access token upon successful authentication, allowing secure requests to resources.\n\n- **User Logout:** The [`POST /signout`](Api/SignIn-SignOut.yaml/paths/~1signout/post) endpoint is intended for user logout and the invalidation of access tokens. Upon calling this endpoint, the server deauthorizes the user and invalidates the current access token.\n\nThese endpoints play a crucial role in user authentication and session management within the system."
  },
  "servers": [
    {
      "url": "https://api.vault.sandbox.testessential.net",
      "description": "Sandbox"
    }
  ],
  "paths": {
    "/oauth/token": {
      "post": {
        "summary": "SignIn",
        "description": "The endpoint is designed for user authentication and obtaining an OAuth access token. Specifically tailored for the client credentials grant type, it generates a token upon successful authentication, enabling secure requests to resources.\r\n\r\nInstructions for using the endpoint are available [here](../docs/signin.md).",
        "operationId": "signin",
        "parameters": [
          {
            "name": "X-Merchant-ID",
            "in": "header",
            "description": "identification of requests from users of a specific partner.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "bece038f-2e46-49f4-b25e-89cd38d6dc16"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "password that must be specified during registration."
                  },
                  "number": {
                    "type": "string",
                    "description": "phone number that is transmitted when receiving a token."
                  },
                  "grant_type": {
                    "type": "string",
                    "description": "authorization type:`mobile_phone`",
                    "default": "mobile_phone"
                  }
                },
                "required": [
                  "grant_type"
                ]
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "password": "string",
                    "number": "string",
                    "grant_type": "mobile_phone"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK\r\n\r\nMedia type: `application/json`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "an encrypted key, a short-lived token for accessing a resource."
                    },
                    "expires_in": {
                      "type": "integer",
                      "description": "token expiration time in seconds."
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "these are credentials for accessing the API in the absence of a user session."
                    },
                    "scope": {
                      "type": "string",
                      "description": "a string representing the token's access scope.",
                      "example": "read write"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "a string representing the token type.",
                      "example": "Bearer"
                    },
                    "jti": {
                      "type": "string",
                      "description": "unique token identifier."
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "access_token": "string",
                      "expires_in": 0,
                      "refresh_token": "string",
                      "scope": "string",
                      "token_type": "string"
                    }
                  }
                },
                "examples": {
                  "200 OK": {
                    "value": {
                      "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwNTFhYTc3Mi0yNDk4LTQ0ZTEtODdmYi0zYzNhZDdlMTY1ODgiLCJleHAiOjE3MDk4MDQzNjksImlhdCI6MTcwOTcxNzk2OX0.9nA1ur5_fGwlap2mrPN35OhR6dJ0M5qmNLNjJ2iZM6g",
                      "token_type": "bearer",
                      "refresh_token": "qPMkKwoedBu2lVZzn9-51hkG_vg",
                      "expires_in": 86399,
                      "scope": "read write",
                      "jti": "nejUZ1PeSBnmTtrZdaAj81sQX44"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The response status code indicates that the server cannot or will not process the request due to something perceived as a client error.\r\n\r\nMedia type: `application/json`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "message that will be displayed to the user."
                    },
                    "field": {
                      "type": "string",
                      "description": "specifies the field in the request that caused the error."
                    },
                    "errorId": {
                      "type": "integer",
                      "description": "integer identifier of the error."
                    },
                    "systemId": {
                      "type": "string",
                      "description": "identifier of the component."
                    },
                    "originalMessage": {
                      "type": "string",
                      "description": "the original error message."
                    },
                    "errorStackTrace": {
                      "type": "string",
                      "description": "additional data related to the error, structured as key-value pairs."
                    },
                    "data": {
                      "type": "object",
                      "description": "additional data related to the error, structured as key-value pairs.",
                      "properties": {
                        "additionalProp1": {
                          "type": "object"
                        },
                        "additionalProp2": {
                          "type": "object"
                        },
                        "additionalProp3": {
                          "type": "object"
                        }
                      }
                    },
                    "error": {
                      "type": "string",
                      "description": "identifier of the error."
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "message": "string",
                      "field": "string",
                      "errorId": 0,
                      "systemId": "string",
                      "originalMessage": "string",
                      "errorStackTrace": "string",
                      "data": {
                        "additionalProp1": {},
                        "additionalProp2": {},
                        "additionalProp3": {}
                      },
                      "error": "string"
                    }
                  }
                },
                "examples": {
                  "400 Bad Request 11": {
                    "value": {
                      "message": "Invalid login or password",
                      "errorId": 11,
                      "systemId": "core",
                      "error": "WRONG_LOGIN_OR_PASSWORD_EXCEPTION"
                    }
                  },
                  "400 Bad Request 273": {
                    "value": {
                      "message": "You have exceeded maximum number of attempts. Please, try again in 1 minute(s)",
                      "errorId": 273,
                      "systemId": "core",
                      "error": "LOGIN_ATTEMPTS_EXCEEDED"
                    }
                  },
                  "400 Bad Request 8": {
                    "value": {
                      "message": "Incorrect code",
                      "errorId": 8,
                      "systemId": "core",
                      "error": "CUSTOMER_VERIFICATION_CODE_INCORRECT"
                    }
                  },
                  "400 Bad Request 53": {
                    "value": {
                      "message": "Maximum login attempts exceeded",
                      "errorId": 53,
                      "systemId": "core",
                      "error": "CUSTOMER_EXCEEDED_NUMBER_OF_PIN_ATTEMPTS"
                    }
                  },
                  "400 Bad Request 267": {
                    "value": {
                      "message": "Password expired. Please, reset password",
                      "errorId": 267,
                      "systemId": "core",
                      "error": "TEMPORARY_PASSWORD_IS_EXPIRED"
                    }
                  },
                  "400 Bad Request 3": {
                    "value": {
                      "message": "Your account has been locked due to security reasons. Please contact our support",
                      "errorId": 3,
                      "systemId": "core",
                      "error": "CUSTOMER_STATUS_INCORRECT"
                    }
                  },
                  "400 Bad Request 422": {
                    "value": {
                      "message": "Sorry for inconvenience. We're fixing the issue. If you have urgent questions, contact support",
                      "field": "residenceStreet",
                      "errorId": 422,
                      "systemId": "core",
                      "error": "NOT_VALID_REQUEST_DATA"
                    }
                  },
                  "400 Bad Request 307": {
                    "value": {
                      "message": "The code has expired, please resend code",
                      "errorId": 307,
                      "systemId": "core",
                      "error": "MFA_SESSION_EXPIRED"
                    }
                  },
                  "400 Bad Request 308": {
                    "value": {
                      "message": "The code has already been used",
                      "errorId": 308,
                      "systemId": "core",
                      "error": "MFA_CODE_ALREADY_USED"
                    }
                  },
                  "400 Bad Request 429": {
                    "value": {
                      "message": "Please wait 30 minutes to sign in or contact our support team via email",
                      "errorId": 429,
                      "systemId": "core",
                      "error": "WAF_LOCK_NOT_IN_LIST"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
